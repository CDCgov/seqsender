from pandera import DataFrameSchema, Column, Check, Index, MultiIndex

schema = DataFrameSchema(
	columns={
		"gs-sample_name": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
				Check.str_length(max_value=50),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Sample name used for GISAID submission.",
			title="gisaid sample name",
		),
		"gs-segment_name": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
				Check.str_length(max_value=50),
			],
			nullable=False,
			unique=True,
			coerce=False,
			required=False,
			description="Segment name of sample used for GISAID submission.",
			title="gisaid segment name",
		),
		"gisaid_accession_epi_isl_id": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=True,
			description="Sample accession ID used to identify submission to GISAID.",
			title="gisaid sample submission status",
		),
		"gisaid_accession_epi_id": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=True,
			description="Sample accession ID used to identify submission in GISAID.",
			title="gisaid sample submission accession",
		),
		"gisaid_message": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=True,
			description="If there is a message tied to the sequence submitted to GISAID, it will appear here.",
			title="gisaid sample submission message",
		),
	},
     checks=None,
     index=None,
     coerce=False,
     strict="filter",
     name="seqsender_status_report_gisaid_schema",
     ordered=True,
     unique=None,
     report_duplicates="all",
     unique_column_names=True,
     add_missing_columns=False,
     title="seqsender status report gisaid schema",
     description="Schema validation for seqsender status report files to prevent incorrect linking of GISAID accessions.",
)
