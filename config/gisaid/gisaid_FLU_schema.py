from pandera import DataFrameSchema, Column, Check, Index, MultiIndex

schema = DataFrameSchema(
	columns={
		"sequence_name": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=True,
			coerce=False,
			required=True,
			description="Sequence identifier used in fasta file. This is used to create the fasta file for Genbank and/or GISAID.",
			title="sequence name",
		),
		"gs-sample_name": Column(
			dtype="object",
			checks=[
				Check.str_length(min_value=1,max_value=50),
			],
			nullable=False,
			unique=True,
			coerce=False,
			required=True,
			description="Identifier name used for GISAID. Max length is 50 characters.",
			title="sample name",
		),
		"gs-segment": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"(?i)(\W|^)(HA|HE|MP|NA|NP|NS|P3|PA|PB1|PB2)(\W|$)"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Segment name for sequence.",
			title="segment",
		),
		"gs-Subtype": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Influenza subtype (e.g. H5N1).",
			title="subtype",
		),
		"gs-Lineage": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="Lineage information.",
			title="lineage",
		),
		"gs-Passage_History": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="\"Original\" if the sample was sequenced directly from swabs, otherwise add the name of the cell line (e.g., \"Vero\") used to culture the specimen.",
			title="passage",
		),
		"gs-Location": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Country.",
			title="location",
		),
		"gs-province": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Province/State.",
			title="province",
		),
		"gs-sub_province": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="Local region name, county, territory, etc.",
			title="sub-province",
		),
		"gs-Location_Additional_info": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="Additional location information (e.g. Cruise Ship, Convention, Live animal market).",
			title="additional location information",
		),
		"gs-Host": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Host species name. For Wastewater use \"Environment\".",
			title="host",
		),
		"gs-Host_Additional_info": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="Additional information regarding patient (e.g. Patient infected while interacting with animal).",
			title="Additional host information",
		),
		"gs-Submitting_Sample_Id": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="ID used by submitting lab.",
			title="submitter sample id",
		),
		"gs-Originating_Lab_Id": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="ID used for originating lab.",
			title="provider lab id",
		),
		"gs-Originating_Sample_Id": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="ID used by originating lab.",
			title="provider sample id",
		),
		"gs-Antigen_Character": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="",
			title="antigen character",
		),
		"gs-Adamantanes_Resistance_geno": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="",
			title="adamantanes resistance",
		),
		"gs-Oseltamivir_Resistance_geno": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="",
			title="oseltamivir resistance",
		),
		"gs-Zanamivir_Resistance_geno": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="",
			title="zanamivir resistance",
		),
		"gs-Peramivir_Resistance_geno": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="",
			title="peramivir resistance",
		),
		"gs-Other_Resistance_geno": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="",
			title="other resistances",
		),
		"gs-Host_Gender": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"(?i)(\W|^)(male|m|female|f|unknown|missing)(\W|$)"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Synonym for \"Biological sex\". Should be \"Female\", \"Male\", or \"Unknown\".",
			title="gender",
		),
		"gs-Host_Age": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Numeric age for host.",
			title="patient age",
		),
		"gs-Host_Age_Unit": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="Unit of time for host age (e.g. Year is \"Y\", Month is \"M\").",
			title="patient age unit",
		),
		"gs-Health_Status": Column(
			dtype="object",
			checks=[
				Check.str_matches(r"^(?!\s*$).+"),
			],
			nullable=False,
			unique=False,
			coerce=False,
			required=True,
			description="E.g., \"Hospitalized\", \"Released\", \"Live\", \"Deceased\", \"Unknown\".",
			title="patient status",
		),
		"gs-Note": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="Sequence note.",
			title="note",
		),
		"gs-PMID": Column(
			dtype="object",
			checks=None,
			nullable=True,
			unique=False,
			coerce=False,
			required=False,
			description="PubMed ID",
			title="PMID",
		),
	},
     checks=None,
     index=None,
     coerce=False,
     strict="filter",
     name="gisaid_flu_schema",
     ordered=False,
     unique=None,
     report_duplicates="all",
     unique_column_names=True,
     add_missing_columns=True,
     title="seqsender GISAID FLU schema",
     description="Schema validation for GISAID Influenza database.",
)
